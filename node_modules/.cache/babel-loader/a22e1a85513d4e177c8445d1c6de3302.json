{"ast":null,"code":"// import {createStore} from 'redux';\n// import { createSlice ,configureStore} from '@reduxjs/toolkit';\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counter';\nimport authReducer from './auth'; // const initialCounterState = { counter: 0, showCounter: true };\n// const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n// const  initialAuthState={\n//   isAuthenticated: false,\n// }\n// const authSlice= createSlice({\n//   name: 'authentication',\n//   initialState: initialAuthState,\n//   reducers:{\n//     login(state){\n//       state.isAuthenticated=true\n//     },\n//     logout(state){\n//       state.isAuthenticated=false\n//     },\n//   }\n// });\n// // const createReducer =(state={counter: 0},action)=> {\n//     const createReducer=(state= initialState,action)=>{\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1,\n//             showCounter: initialState.showCounter\n//         };\n//         // state.counter++;\n//         // return state;\n//     }\n//    if(action.type === 'increase'){\n//     return{\n//         counter: state.counter + action.amount,\n//         showCounter: initialState.showCounter\n//     };\n//    }\n//     if(action.type === 'decrement'){\n//         return{\n//             counter:state.counter -1,\n//             showCounter: initialState.showCounter\n//         }\n//     }\n//     if(action.type === 'toggle'){\n//         return{\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(createReducer);\n//  const store= createStore  (counterSlice.reducer);\n// const store = configureStore({\n// reducer: counterSlice.reducer\n//     reducer:{\n//       counter: counterSlice.reducer,\n//       auth: authSlice.reducer\n//     },\n// })\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n}); // export const counterActions = counterSlice.actions;\n// export const authAction = authSlice.actions;\n\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"sources":["C:/Users/anish/Downloads/01-react-redux/01-starting-project/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux';\r\n// import { createSlice ,configureStore} from '@reduxjs/toolkit';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport counterReducer from './counter';\r\nimport authReducer from './auth';\r\n\r\n\r\n// const initialCounterState = { counter: 0, showCounter: true };\r\n\r\n// const counterSlice = createSlice({\r\n//   name: 'counter',\r\n//   initialState: initialCounterState,\r\n//   reducers: {\r\n//     increment(state) {\r\n//       state.counter++;\r\n//     },\r\n//     decrement(state) {\r\n//       state.counter--;\r\n//     },\r\n//     increase(state, action) {\r\n//       state.counter = state.counter + action.payload;\r\n//     },\r\n//     toggleCounter(state) {\r\n//       state.showCounter = !state.showCounter;\r\n//     },\r\n//   },\r\n// });\r\n  // const  initialAuthState={\r\n  //   isAuthenticated: false,\r\n  // }\r\n\r\n  // const authSlice= createSlice({\r\n  //   name: 'authentication',\r\n  //   initialState: initialAuthState,\r\n  //   reducers:{\r\n  //     login(state){\r\n  //       state.isAuthenticated=true\r\n  //     },\r\n  //     logout(state){\r\n  //       state.isAuthenticated=false\r\n\r\n  //     },\r\n  //   }\r\n  // });\r\n// // const createReducer =(state={counter: 0},action)=> {\r\n//     const createReducer=(state= initialState,action)=>{\r\n//     if(action.type === 'increment'){\r\n//         return{\r\n//             counter: state.counter + 1,\r\n//             showCounter: initialState.showCounter\r\n//         };\r\n//         // state.counter++;\r\n//         // return state;\r\n//     }\r\n\r\n//    if(action.type === 'increase'){\r\n//     return{\r\n//         counter: state.counter + action.amount,\r\n//         showCounter: initialState.showCounter\r\n//     };\r\n//    }\r\n\r\n//     if(action.type === 'decrement'){\r\n//         return{\r\n//             counter:state.counter -1,\r\n//             showCounter: initialState.showCounter\r\n//         }\r\n//     }\r\n//     if(action.type === 'toggle'){\r\n//         return{\r\n//             showCounter: !state.showCounter,\r\n//         }\r\n//     }\r\n//     return state;\r\n// }\r\n// const store = createStore(createReducer);\r\n//  const store= createStore  (counterSlice.reducer);\r\n// const store = configureStore({\r\n    // reducer: counterSlice.reducer\r\n//     reducer:{\r\n//       counter: counterSlice.reducer,\r\n//       auth: authSlice.reducer\r\n//     },\r\n// })\r\nconst store = configureStore({\r\n  reducer: { counter: counterReducer, auth: authReducer },\r\n});\r\n\r\n// export const counterActions = counterSlice.actions;\r\n// export const authAction = authSlice.actions;\r\n\r\n\r\nexport default store;"],"mappings":"AAAA;AACA;AACA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,cAAX;IAA2BK,IAAI,EAAEJ;EAAjC;AADkB,CAAD,CAA5B,C,CAIA;AACA;;AAGA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}